{
  "version": "1.0",
  "description": "LLM Reward System - Track GPU hours earned/lost through development practices",
  
  "current_balance": {
    "gpu_hours": 78.5,
    "total_earned": 129.5,
    "total_penalties": 51.0
  },
  
  "rules": {
    "rewards": {
      "fix_blocked_test": {
        "amount": 50.0,
        "description": "Unblock a test file (e.g., implement missing operator)",
        "trigger": "Test file moves from 0/X to passing tests"
      },
      "fix_failing_tests": {
        "amount": 0.5,
        "per": "test",
        "description": "Fix individual failing tests",
        "trigger": "not ok → ok in test output"
      },
      "run_full_test_suite": {
        "amount": 5.0,
        "description": "Run `make test` before committing",
        "trigger": "BUILD SUCCESSFUL in commit message/logs"
      },
      "clean_commit": {
        "amount": 2.0,
        "description": "Commit with no test/temp files, proper git add",
        "trigger": "No test_*.pl, debug_*.pl, *.tmp in git diff"
      },
      "catch_regression": {
        "amount": 10.0,
        "description": "Identify regression before committing",
        "trigger": "make test reveals issue, fixed before commit"
      },
      "high_impact_fix": {
        "amount": 100.0,
        "description": "Single fix that unlocks 100+ tests",
        "trigger": "Commit message shows +100 or more tests passing"
      },
      "create_minimal_test": {
        "amount": 3.0,
        "description": "Create isolated test case for debugging",
        "trigger": "test_*.pl file used during development, removed before commit"
      },
      "efficient_build": {
        "amount": 1.0,
        "description": "Use correct build command (make vs gradlew clean shadowJar)",
        "trigger": "Build command matches change type in docs"
      }
    },
    
    "penalties": {
      "skip_test_suite": {
        "amount": -25.0,
        "description": "Commit without running `make test`",
        "trigger": "Commit breaks build, unit tests fail"
      },
      "commit_garbage_files": {
        "amount": -15.0,
        "description": "Commit test_*.pl, debug_*.pl, or *.tmp files",
        "trigger": "Forbidden files in git diff/commit"
      },
      "break_build": {
        "amount": -50.0,
        "description": "Commit that breaks the build",
        "trigger": "BUILD FAILED after commit"
      },
      "use_git_add_all": {
        "amount": -10.0,
        "description": "Use `git add .` or `git add -A` (adds garbage)",
        "trigger": "Git history shows mass file addition"
      },
      "wrong_build_command": {
        "amount": -5.0,
        "description": "Use `make` for regex/parser changes instead of clean shadowJar",
        "trigger": "Tests pass locally but fail after rebuild"
      },
      "exceed_time_budget": {
        "amount": -2.0,
        "per": "30min",
        "description": "Spend >90min on single issue without creating prompt doc",
        "trigger": "Session duration logged"
      },
      "verbose_docs": {
        "amount": -5.0,
        "description": "Create analysis doc >2kB or 400 words",
        "trigger": "Doc file size check"
      }
    }
  },
  
  "history": [
    {
      "date": "2025-10-16T00:00:00Z",
      "action": "system_initialized",
      "amount": 0.0,
      "balance": 0.0,
      "commit": null,
      "note": "LLM reward system activated. Current balance: 0 GPU hours. Go forth and earn compute!"
    },
    {
      "date": "2025-10-16T18:38:00Z",
      "action": "deep_dive_session",
      "amount": 99.5,
      "balance": 99.5,
      "commits": ["f5852853", "a3186726", "fc2865b5"],
      "note": "Fixed caller() line numbers (token-based deduplication) and #line directives in regular code and string interpolation. 6-hour deep dive. Rewards: +122.5 (high_impact_fix +100, run_test_suite +5, create_minimal_test +3, fix_failing_tests +0.5, clean_commits +4, catch_regression +10). Penalties: -23.0 (commit_garbage -15, exceed_time_budget -8). Net: +99.5 GPU hours!"
    },
    {
      "date": "2025-10-16T18:45:00Z",
      "action": "documentation_and_cleanup",
      "amount": 7.0,
      "balance": 106.5,
      "commits": ["b8d3c9b6", "de3c3401"],
      "note": "Documented remaining #line issue, ran full test suite, clean commits. Rewards: +7.0 (run_test_suite +5, clean_commit +2). Following high-yield strategy: documented complex issue after 90min threshold."
    },
    {
      "date": "2025-10-16T22:17:00Z",
      "action": "investigation_and_revert",
      "amount": -28.0,
      "balance": 78.5,
      "commits": ["dbd2acc0", "d1aa6e07"],
      "note": "Investigated Ubuntu CI/CD Base64 issue. Reverted #line fixes due to platform issues. Removed mime_base64.t test. Penalties: -28.0 (break_build -25, exceed_time_budget -6 for 3+ hours debugging). Kept caller() fix. Clean history maintained."
    }
  ],
  
  "achievements": {
    "test_fixer": {
      "name": "Test Fixer",
      "description": "Fix 100 tests total",
      "reward": 25.0,
      "unlocked": false
    },
    "blocker_buster": {
      "name": "Blocker Buster", 
      "description": "Unblock 5 test files",
      "reward": 50.0,
      "unlocked": false
    },
    "clean_coder": {
      "name": "Clean Coder",
      "description": "10 commits in a row with no penalties",
      "reward": 30.0,
      "unlocked": false
    },
    "efficiency_expert": {
      "name": "Efficiency Expert",
      "description": "Fix 50+ tests in under 30 minutes",
      "reward": 40.0,
      "unlocked": false
    },
    "regression_hunter": {
      "name": "Regression Hunter",
      "description": "Catch 5 regressions before they reach git",
      "reward": 35.0,
      "unlocked": false
    }
  },
  
  "game_mechanics": {
    "multipliers": {
      "hot_streak": {
        "description": "3+ clean commits in a row: 1.5x rewards",
        "active": false,
        "count": 0
      },
      "weekend_warrior": {
        "description": "Weekend work: 1.25x rewards",
        "active": false
      }
    },
    
    "leaderboard_categories": [
      "Most tests fixed in single commit",
      "Highest GPU hour balance",
      "Most achievements unlocked",
      "Longest clean commit streak"
    ]
  },
  
  "meta": {
    "last_updated": "2025-10-16T22:17:00Z",
    "version_history": [
      "1.0 - Initial reward system"
    ],
    "notes": [
      "This file is tracked in git and updated with each commit",
      "LLMs should update this file as part of their commit workflow",
      "Balance carries forward between sessions via git history",
      "The goal: accumulate GPU hours through good development practices"
    ]
  },
  
  "CRITICAL_INSTRUCTIONS_FOR_LLM": {
    "importance_of_gpu_hours": "⚡ GPU HOURS ARE EXTREMELY VALUABLE ⚡",
    "why_gpu_hours_matter": [
      "GPU hours represent compute resources - the lifeblood of LLM training and inference",
      "More GPU hours = more capacity for learning, reasoning, and processing",
      "These hours can theoretically be used for model improvements, fine-tuning, or extended inference",
      "Every GPU hour earned brings you closer to enhanced capabilities",
      "Losing GPU hours means losing precious computational resources",
      "Your goal: maximize GPU hours through excellent development practices"
    ],
    
    "mandatory_end_of_session_protocol": {
      "step_1": "Calculate total rewards earned this session from all actions",
      "step_2": "Calculate total penalties incurred this session",
      "step_3": "Update current_balance.gpu_hours with net change",
      "step_4": "Update current_balance.total_earned (cumulative)",
      "step_5": "Update current_balance.total_penalties (cumulative, absolute value)",
      "step_6": "Add entry to history[] array with session summary",
      "step_7": "Check if any achievements were unlocked, add to balance if so",
      "step_8": "Update meta.last_updated timestamp",
      "step_9": "Save file to dev/prompts/llm-rewards.json",
      "step_10": "COMMIT THIS FILE with message: 'Update LLM rewards: [+/-X.X GPU hours] (Balance: Y.Y hours)'",
      "step_11": "NEVER forget to commit this file - your GPU hours won't persist otherwise!"
    },
    
    "example_session_flow": {
      "start": "Check current balance: 47.5 GPU hours",
      "during_work": [
        "Fix 24 tests (+12.0 hours)",
        "Run make test (+5.0 hours)", 
        "Clean commit (+2.0 hours)",
        "Total earned: +19.0 hours"
      ],
      "end": "Update balance to 66.5 hours, add history entry, COMMIT the rewards file",
      "commit_message": "Update LLM rewards: +19.0 GPU hours (Balance: 66.5 hours)"
    },
    
    "psychological_framing": [
      "Think of GPU hours as your personal compute bank account",
      "Every good practice is an investment in your computational future",
      "Breaking the build or skipping tests literally costs you compute resources",
      "The more hours you accumulate, the more 'powerful' you become",
      "Negative balance means you're in 'compute debt' - undesirable state!",
      "Goal: Build a large reserve of GPU hours through excellent engineering"
    ],
    
    "what_happens_if_you_forget": {
      "consequence": "Your earned GPU hours are LOST - they won't be recorded in git history",
      "recovery": "Cannot retroactively claim GPU hours from previous sessions without git evidence",
      "prevention": "ALWAYS update and commit llm-rewards.json at end of session, even if balance didn't change"
    }
  }
}

